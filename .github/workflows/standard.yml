name: integration

on:
  pull_request:
    branches:
      - main
  push:
    branches-ignore:
      - "release-please--*"
  release:
    types:
      - published

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: pre-commit
        uses: Foxon-Consulting/github-actions/integration/common/pre-commit@main

  integration:
    uses: Foxon-Consulting/github-actions/.github/workflows/python_integration.yml@main
    with:
      python_version: "3.11"

  releasing:
    runs-on: ubuntu-latest
    needs:
      - pre-commit
      - integration
    if: github.ref == 'refs/heads/main'
    steps:
      - name: releasing
        uses: Foxon-Consulting/github-actions/delivery/common/release-please@main
        with:
          RELEASE_PLEASE_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  docker-delivery:
    needs: releasing
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:buildcache,mode=max
